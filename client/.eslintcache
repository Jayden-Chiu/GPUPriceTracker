[{"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\index.js":"1","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\App.js":"2","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuTable.js":"4","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\api\\index.js":"5","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\columns.js":"6","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuContainer.js":"7","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\TablePaginationActions.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":162,"mtime":1608769147032,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2981,"mtime":1608777637002,"results":"13","hashOfConfig":"10"},{"size":185,"mtime":1608706704848,"results":"14","hashOfConfig":"10"},{"size":831,"mtime":1608775948409,"results":"15","hashOfConfig":"10"},{"size":1176,"mtime":1608775228129,"results":"16","hashOfConfig":"10"},{"size":2308,"mtime":1608774505910,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17wj6g6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\index.js",[],["39","40"],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\App.js",[],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuTable.js",["41","42","43","44","45","46","47","48","49"],"import React, { useState } from 'react';\r\n\r\nimport MaUTable from '@material-ui/core/Table';\r\nimport PropTypes from 'prop-types';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TablePaginationActions from './TablePaginationActions';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { useGlobalFilter, usePagination, useRowSelect, useSortBy, useTable } from 'react-table';\r\n\r\nexport const GpuTable = ({ columns, data }) => {\r\n\tconst {\r\n\t\tgetTableProps,\r\n\t\theaderGroups,\r\n\t\tprepareRow,\r\n\t\tpage,\r\n\t\tgotoPage,\r\n\t\tsetPageSize,\r\n\t\tpreGlobalFilteredRows,\r\n\t\tsetGlobalFilter,\r\n\t\tstate: { pageIndex, pageSize, selectedRowIds, globalFilter },\r\n\t} = useTable(\r\n\t\t{\r\n\t\t\tcolumns,\r\n\t\t\tdata,\r\n    },\r\n    useSortBy,\r\n\t\tusePagination,\r\n\t);\r\n\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tgotoPage(newPage);\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tsetPageSize(Number(event.target.value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableContainer>\r\n\t\t\t<MaUTable {...getTableProps()}>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t<TableRow {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t<TableCell {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\t\t\t\t\t\t\t\t\t{column.render('Header')}\r\n\t\t\t\t\t\t\t\t\t{column.id !== 'selection' ? (\r\n\t\t\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\t\t\tactive={column.isSorted}\r\n\t\t\t\t\t\t\t\t\t\t\t// react-table has a unsorted state which is not treated here\r\n\t\t\t\t\t\t\t\t\t\t\tdirection={column.isSortedDesc ? 'desc' : 'asc'}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{page.map((row, i) => {\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableRow {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\treturn <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</TableBody>\r\n\r\n\t\t\t\t<TableFooter>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\trowsPerPageOptions={[5, 10, 25, { label: 'All', value: data.length }]}\r\n\t\t\t\t\t\t\tcolSpan={3}\r\n\t\t\t\t\t\t\tcount={data.length}\r\n\t\t\t\t\t\t\trowsPerPage={pageSize}\r\n\t\t\t\t\t\t\tpage={pageIndex}\r\n\t\t\t\t\t\t\tSelectProps={{\r\n\t\t\t\t\t\t\t\tinputProps: { 'aria-label': 'rows per page' },\r\n\t\t\t\t\t\t\t\tnative: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\tActionsComponent={TablePaginationActions}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableFooter>\r\n\t\t\t</MaUTable>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\api\\index.js",[],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\columns.js",["50"],"export const COLUMNS = [\r\n\t{\r\n\t\tHeader: 'Image',\r\n\t\taccessor: 'img',\r\n\t\tCell: (row) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ width: 150 }}>\r\n\t\t\t\t\t<img height={100} src={row.row.original.img} />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tHeader: 'Name',\r\n\t\taccessor: 'title',\r\n\t\tCell: (row) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ width: 800 }}>\r\n\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t<a href={row.row.original.link}>{row.row.original.title}</a>\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tHeader: 'Price',\r\n\t\taccessor: 'price',\r\n\t\tCell: (row) => {\r\n\t\t\tconst value = isNaN(row.value) ? row.value : `$${Math.round(row.value * 100) / 100}`;\r\n\t\t\treturn <div style={{ width: 200 }}>{value}</div>;\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tHeader: 'Brand',\r\n    accessor: 'brand',\r\n    width: 200\r\n\t},\r\n\t{\r\n\t\tHeader: 'Retailer',\r\n    accessor: 'retailer',\r\n    width: 200\r\n\t},\r\n];\r\n","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuContainer.js",["51","52"],"import React, { useState, useEffect, useMemo } from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { COLUMNS } from './columns';\r\nimport api from '../api';\r\nimport { GpuTable } from './GpuTable';\r\n\r\nexport const GpuContainer = () => {\r\n\tconst [gpuData, setGpuData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skipPageReset, setSkipPageReset] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tapi\r\n\t\t\t.getAllGpus()\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconst data = response.data;\r\n\t\t\t\tconst gpuData = data.map((gpu) => ({\r\n\t\t\t\t\timg: gpu.img,\r\n\t\t\t\t\ttitle: gpu.title,\r\n\t\t\t\t\tprice: gpu.price,\r\n\t\t\t\t\tbrand: gpu.brand,\r\n\t\t\t\t\tlink: gpu.link,\r\n\t\t\t\t\tretailer: gpu.retailer,\r\n\t\t\t\t}));\r\n\t\t\t\tsetGpuData(gpuData);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetGpuData([]);\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.finally(() => setLoading(false));\r\n\t}, []);\r\n\r\n\tconst columns = useMemo(() => COLUMNS, []);\r\n\r\n\tif (gpuData.length === 0 && !loading) {\r\n\t\treturn <div>No GPU data available</div>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<GpuTable columns={columns} data={gpuData} loading={loading} />\r\n\t\t</div>\r\n\t);\r\n};\r\n","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\TablePaginationActions.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":17},{"ruleId":"59","severity":1,"message":"64","line":15,"column":8,"nodeType":"61","messageId":"62","endLine":15,"endColumn":24},{"ruleId":"59","severity":1,"message":"65","line":17,"column":10,"nodeType":"61","messageId":"62","endLine":17,"endColumn":25},{"ruleId":"59","severity":1,"message":"66","line":17,"column":42,"nodeType":"61","messageId":"62","endLine":17,"endColumn":54},{"ruleId":"59","severity":1,"message":"67","line":27,"column":3,"nodeType":"61","messageId":"62","endLine":27,"endColumn":24},{"ruleId":"59","severity":1,"message":"68","line":28,"column":3,"nodeType":"61","messageId":"62","endLine":28,"endColumn":18},{"ruleId":"59","severity":1,"message":"69","line":29,"column":33,"nodeType":"61","messageId":"62","endLine":29,"endColumn":47},{"ruleId":"59","severity":1,"message":"70","line":29,"column":49,"nodeType":"61","messageId":"62","endLine":29,"endColumn":61},{"ruleId":"71","severity":1,"message":"72","line":8,"column":6,"nodeType":"73","endLine":8,"endColumn":53},{"ruleId":"59","severity":1,"message":"74","line":12,"column":10,"nodeType":"61","messageId":"62","endLine":12,"endColumn":23},{"ruleId":"59","severity":1,"message":"75","line":12,"column":25,"nodeType":"61","messageId":"62","endLine":12,"endColumn":41},{"ruleId":"55","replacedBy":"76"},{"ruleId":"57","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'CircularProgress' is defined but never used.","'useGlobalFilter' is defined but never used.","'useRowSelect' is defined but never used.","'preGlobalFilteredRows' is assigned a value but never used.","'setGlobalFilter' is assigned a value but never used.","'selectedRowIds' is assigned a value but never used.","'globalFilter' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'skipPageReset' is assigned a value but never used.","'setSkipPageReset' is assigned a value but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation"]