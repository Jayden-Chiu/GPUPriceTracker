[{"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\index.js":"1","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\App.js":"2","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuTable.js":"4","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\api\\index.js":"5","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\columns.js":"6","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuContainer.js":"7","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\TablePaginationActions.js":"8","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\NavBar.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":229,"mtime":1608799794217,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3653,"mtime":1608863066191,"results":"14","hashOfConfig":"11"},{"size":185,"mtime":1608706704848,"results":"15","hashOfConfig":"11"},{"size":1044,"mtime":1608861822023,"results":"16","hashOfConfig":"11"},{"size":1712,"mtime":1608857184180,"results":"17","hashOfConfig":"11"},{"size":2308,"mtime":1608774505910,"results":"18","hashOfConfig":"11"},{"size":2058,"mtime":1608863131004,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"17wj6g6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\index.js",[],["44","45"],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\App.js",["46"],"import './App.css';\r\nimport { GpuContainer } from './components/GpuContainer';\r\nimport { NavBar } from './components/NavBar';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<GpuContainer />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuTable.js",["47","48","49","50"],"import React, { useState } from 'react';\r\n\r\nimport MaUTable from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TablePaginationActions from './TablePaginationActions';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NavBar } from './NavBar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { usePagination, useSortBy, useGlobalFilter, useTable, useAbsoluteLayout, useBlockLayout } from 'react-table';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport const GpuTable = ({ columns, data, loading, setData, updateMyData, skipPageReset, setDataFilter }) => {\r\n\tconst {\r\n\t\tgetTableProps,\r\n\t\theaderGroups,\r\n\t\tprepareRow,\r\n\t\tpage,\r\n\t\tgotoPage,\r\n\t\tsetPageSize,\r\n\t\tsetGlobalFilter,\r\n\t\tstate: { pageIndex, pageSize, globalFilter },\r\n\t} = useTable(\r\n\t\t{\r\n\t\t\tcolumns,\r\n\t\t\tdata,\r\n\t\t\tautoResetPage: !skipPageReset,\r\n\t\t\tupdateMyData,\r\n\t\t\tinitialState: {\r\n\t\t\t\tglobalFilter: '',\r\n\t\t\t},\r\n\t\t},\r\n\t\tuseGlobalFilter,\r\n\t\tuseSortBy,\r\n\t\tusePagination,\r\n\t\tuseBlockLayout\r\n\t);\r\n\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tgotoPage(newPage);\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tsetPageSize(Number(event.target.value));\r\n\t};\r\n\r\n\tconst handleDataCount = () =>\r\n\t\tdata.filter((a) =>\r\n\t\t\tObject.values(a).some((e) => {\r\n\t\t\t\tif (Object.prototype.toString.call(e) === '[object String]' && globalFilter !== undefined) {\r\n\t\t\t\t\treturn e.toLowerCase().includes(globalFilter.toLowerCase());\r\n\t\t\t\t}\r\n\t\t\t\treturn globalFilter === undefined;\r\n\t\t\t})\r\n\t\t).length;\r\n\r\n\treturn (\r\n\t\t<TableContainer>\r\n\t\t\t<NavBar filter={globalFilter} setFilter={setGlobalFilter} />\r\n\r\n\t\t\t<MaUTable {...getTableProps()}>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t<TableRow {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t<TableCell {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\t\t\t\t\t\t\t\t\t{column.render('Header')}\r\n\t\t\t\t\t\t\t\t\t{column.id !== 'selection' ? (\r\n\t\t\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\t\t\tactive={column.isSorted}\r\n\t\t\t\t\t\t\t\t\t\t\t// react-table has a unsorted state which is not treated here\r\n\t\t\t\t\t\t\t\t\t\t\tdirection={column.isSortedDesc ? 'desc' : 'asc'}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{page.map((row, i) => {\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableRow {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\treturn <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</TableBody>\r\n\r\n\t\t\t\t<TableFooter>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\trowsPerPageOptions={[5, 10, 25, { label: 'All', value: data.length }]}\r\n\t\t\t\t\t\t\tcolSpan={3}\r\n\t\t\t\t\t\t\tcount={handleDataCount()}\r\n\t\t\t\t\t\t\trowsPerPage={pageSize}\r\n\t\t\t\t\t\t\tpage={pageIndex}\r\n\t\t\t\t\t\t\tSelectProps={{\r\n\t\t\t\t\t\t\t\tinputProps: { 'aria-label': 'rows per page' },\r\n\t\t\t\t\t\t\t\tnative: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\tActionsComponent={TablePaginationActions}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableFooter>\r\n\t\t\t</MaUTable>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\api\\index.js",[],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\columns.js",["51"],"export const COLUMNS = [\r\n\t{\r\n\t\tHeader: 'Image',\r\n\t\taccessor: 'img',\r\n\t\tCell: (row) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ width: 150 }}>\r\n\t\t\t\t\t<img height={100} src={row.row.original.img} />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n    },\r\n    minWidth: 150,\r\n    maxWidth: 150,\r\n\t},\r\n\t{\r\n\t\tHeader: 'Name',\r\n\t\taccessor: 'title',\r\n\t\tCell: (row) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ width: 850, padding: 20 }}>\r\n\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t<a href={row.row.original.link}>{row.row.original.title}</a>\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n    },\r\n    minWidth: 900,\r\n    maxWidth: 900\r\n\t},\r\n\t{\r\n\t\tHeader: 'Price',\r\n\t\taccessor: 'price',\r\n\t\tCell: (row) => {\r\n\t\t\tconst value = isNaN(row.value) ? row.value : `$${Math.round(row.value * 100) / 100}`;\r\n\t\t\treturn <div style={{ width: 200 }}>{value}</div>;\r\n    },\r\n    disableGlobalFilter: true,\r\n    width: 200,\r\n    maxWidth: 200,\r\n\t},\r\n\t{\r\n\t\tHeader: 'Brand',\r\n    accessor: 'brand',\r\n    minWidth: 200,\r\n    maxWidth: 200\r\n\t},\r\n\t{\r\n\t\tHeader: 'Retailer',\r\n    accessor: 'retailer',\r\n    minWidth: 200,\r\n    maxWidth: 200\r\n\t},\r\n];\r\n","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\GpuContainer.js",["52"],"import React, { useState, useEffect, useMemo } from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { COLUMNS } from './columns';\r\nimport api from '../api';\r\nimport { GpuTable } from './GpuTable';\r\n\r\nexport const GpuContainer = () => {\r\n  const [origData, setOrigData] = useState([]);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [skipPageReset, setSkipPageReset] = useState(false);\r\n\r\n\tconst updateMyData = () => {\r\n\t\t// We also turn on the flag to not reset the page\r\n\t\tsetSkipPageReset(true);\r\n\t\t// const newData = origData.filter((gpu) => {\r\n\t\t// \tconst obj = JSON.parse(gpu);\r\n\t\t// \tconst values = Object.keys(obj).map(function (key) {\r\n\t\t// \t\treturn obj[key];\r\n\t\t// \t});\r\n\t\t// \treturn values.find(a =>a.includes('asus')).length > 0\r\n\t\t// });\r\n\t\t// setData(newData);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tapi\r\n\t\t\t.getAllGpus()\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconst data = response.data.map((gpu) => ({\r\n\t\t\t\t\timg: gpu.img,\r\n\t\t\t\t\ttitle: gpu.title,\r\n\t\t\t\t\tprice: gpu.price,\r\n\t\t\t\t\tbrand: gpu.brand,\r\n\t\t\t\t\tlink: gpu.link,\r\n\t\t\t\t\tretailer: gpu.retailer,\r\n\t\t\t\t}));\r\n        setData(data);\r\n        setOrigData(data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetData([]);\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.finally(() => setLoading(false));\r\n\t}, []);\r\n\r\n\tconst columns = useMemo(() => COLUMNS, []);\r\n\r\n\tif (data.length === 0 && !loading) {\r\n\t\treturn <div>No GPU data available</div>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<GpuTable\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={data}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tsetData={setData}\r\n\t\t\t\tupdateMyData={updateMyData}\r\n\t\t\t\tskipPageReset={skipPageReset}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\TablePaginationActions.js",[],["53","54"],"C:\\Users\\jochi\\OneDrive\\Documents\\Projects\\GPUTracker\\gpu-tracker\\client\\src\\components\\NavBar.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":16},{"ruleId":"59","severity":1,"message":"63","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"64","line":16,"column":8,"nodeType":"61","messageId":"62","endLine":16,"endColumn":24},{"ruleId":"59","severity":1,"message":"65","line":18,"column":63,"nodeType":"61","messageId":"62","endLine":18,"endColumn":80},{"ruleId":"59","severity":1,"message":"66","line":20,"column":7,"nodeType":"61","messageId":"62","endLine":20,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":8,"column":6,"nodeType":"69","endLine":8,"endColumn":53},{"ruleId":"59","severity":1,"message":"70","line":10,"column":10,"nodeType":"61","messageId":"62","endLine":10,"endColumn":18},{"ruleId":"55","replacedBy":"71"},{"ruleId":"57","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CircularProgress' is defined but never used.","'useAbsoluteLayout' is defined but never used.","'useStyles' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'origData' is assigned a value but never used.",["73"],["74"],"no-global-assign","no-unsafe-negation"]